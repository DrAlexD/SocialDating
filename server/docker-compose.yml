services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: nc -z 127.0.0.1 2181 || exit -1
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s

  postgres-users-service:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: ${POSTGRES_USERS_USER}
      POSTGRES_PASSWORD: ${POSTGRES_USERS_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USERS_USER} -d users_db
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s
    volumes:
      - postgres-users-data:/var/lib/postgresql/data

  postgres-categories-service:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: categories_db
      POSTGRES_USER: ${POSTGRES_CATEGORIES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_CATEGORIES_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_CATEGORIES_USER} -d categories_db
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s
    volumes:
      - postgres-categories-data:/var/lib/postgresql/data

  postgres-defining-themes-service:
    image: postgres:latest
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: defining_themes_db
      POSTGRES_USER: ${POSTGRES_DEFINING_THEMES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DEFINING_THEMES_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_DEFINING_THEMES_USER} -d defining_themes_db
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s
    volumes:
      - postgres-defining-themes-data:/var/lib/postgresql/data

  postgres-statements-service:
    image: postgres:latest
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: statements_db
      POSTGRES_USER: ${POSTGRES_STATEMENTS_USER}
      POSTGRES_PASSWORD: ${POSTGRES_STATEMENTS_PASSWORD}
    healthcheck:
      test: pg_isready -U ${POSTGRES_STATEMENTS_USER} -d statements_db
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s
    volumes:
      - postgres-statements-data:/var/lib/postgresql/data

  gateway-service:
    depends_on:
      - kafka
    build:
      context: ./gateway-service
    ports:
      - "8080:8080"
    healthcheck:
      test: curl -f http://localhost:8080/actuator/health
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s

  users-service:
    depends_on:
      - postgres-users-service
      - gateway-service
    environment:
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USERS_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_USERS_PASSWORD}
    build:
      context: ./users-service
    healthcheck:
      test: curl -f http://localhost:8010/actuator/health
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s

  categories-service:
    depends_on:
      - kafka
      - postgres-categories-service
      - gateway-service
    environment:
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_CATEGORIES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_CATEGORIES_PASSWORD}
    build:
      context: ./categories-service
    healthcheck:
      test: curl -f http://localhost:8020/actuator/health
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s

  defining-themes-service:
    depends_on:
      - kafka
      - postgres-defining-themes-service
      - gateway-service
    environment:
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_DEFINING_THEMES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_DEFINING_THEMES_PASSWORD}
    build:
      context: ./defining-themes-service
    healthcheck:
      test: curl -f http://localhost:8030/actuator/health
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s

  statements-service:
    depends_on:
      - kafka
      - postgres-statements-service
      - gateway-service
    environment:
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_STATEMENTS_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_STATEMENTS_PASSWORD}
    build:
      context: ./statements-service
    healthcheck:
      test: curl -f http://localhost:8040/actuator/health
      retries: 5
      interval: 10s
      start_period: 30s
      timeout: 5s

volumes:
  postgres-users-data:
  postgres-categories-data:
  postgres-defining-themes-data:
  postgres-statements-data:
